# Custom Gcodes

[gcode_macro TURN_OFF_PRINTER]
description: Turn off printer circuit (not Raspberry Pi)
gcode: {action_call_remote_method("set_device_power", device="Printer", state="off")}

[gcode_macro HOST_SHUTDOWN]
description: Shutdown whole printer (Raspberry Pi)
gcode: {action_call_remote_method("shutdown_machine")}

[gcode_macro HOST_RESTART]
description: Restart whole printer (Raspberry Pi)
gcode: {action_call_remote_method("reboot_machine")}

[delayed_gcode LOOP_TURN_OFF_PRINTER]
gcode:
	{% if printer.extruder.temperature < 50.0 and printer.extruder.target < 50.0 %}
		UPDATE_DELAYED_GCODE ID=LOOP_TURN_OFF_PRINTER DURATION=0
		TURN_OFF_PRINTER
	{% elif printer.idle_timeout.state != "Idle" %}
		UPDATE_DELAYED_GCODE ID=LOOP_TURN_OFF_PRINTER DURATION=0
	{% else %}
		UPDATE_DELAYED_GCODE ID=LOOP_TURN_OFF_PRINTER DURATION=5
	{% endif %}

[gcode_macro STATE]
gcode: {action_respond_info("Printer is currently %s" % (printer.idle_timeout.state))}

[gcode_macro UNSAFE_MOVE]
description: Move axis without homing
gcode:
	{% set axis = params.AXIS|default("Z") %}
	{% set offset = params.OFFSET|default(10)|int %}
	{% set z_offset = 0 if axis != "Z" else printer.gcode_move.homing_origin.z %}
	{% set pos = 0 if offset >= 0 else (-offset + -z_offset) %}
	SAVE_GCODE_STATE NAME=__unsave__move
	SET_KINEMATIC_POSITION {axis}={pos}
	G91
	G0 {axis}{offset} F600
	M84
	RESTORE_GCODE_STATE NAME=__unsave__move

[gcode_macro DUMP_VARIABLES]
gcode:
	{% set filter_name = params.NAME|default('')|string|lower %}
	{% set filter_value = params.VALUE|default('')|string|lower %}
	{% set show_cfg = params.SHOW_CFG|default(0)|int %}
	{% set out = [] %}
	{% for key1 in printer %}
		{% for key2 in printer[key1] %}
			{% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
				{% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
			{% endif %}
		{% else %}
			{% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
				{% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
			{% endif %}
		{% endfor %}
	{% endfor %}
    {action_respond_info(out|join("\n"))}

# Custom LCD menus
[menu __main __control __unsafe_move]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Unsafe Move

[menu __main __control __unsafe_move __axis_x]
type: input
name: Unsafe X:{'%04.1f' % menu.input}
input: 0
input_min: -{printer.toolhead.axis_maximum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 5.0
gcode:
	UNSAFE_MOVE AXIS=X OFFSET={menu.input}

[menu __main __control __unsafe_move __ayis_y]
type: input
name: Unsave Y:{'%04.1f' % menu.input}
input: 0
input_min: -{printer.toolhead.axis_maximum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 5.0
gcode:
	UNSAFE_MOVE AXIS=Y OFFSET={menu.input}

[menu __main __control __unsafe_move __axis_z]
type: input
name: Unsafe Z:{'%04.1f' % menu.input}
input: 0
input_min: -{printer.toolhead.axis_maximum.z}
input_max: {printer.toolhead.axis_maximum.z}
input_step: 5.0
gcode:
	UNSAFE_MOVE AZIS=Z OFFSET={menu.input}

[menu __main __control __unsafe_move __axis_e]
type: input
name: Unsafe E:{'%04.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extruder_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extruder_only_distance|default(50)}
input_step: 5.0
gcode:
	UNSAFE_MOVE AZIS=Z OFFSET={menu.input}

[menu __main __control __abort]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Cancel Print

[menu __main __control __abort __confirm]
type: command
name: Confirm
gcode:
  CANCEL_PRINT
  {menu.back()}

[menu __main __setup __restart]
type: list
enable: False
name: Restart

[menu __main __system]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: System Control

[menu __main __system __turn_off_printer]
type: command
name: Turn Off Printer
gcode: TURN_OFF_PRINTER

[menu __main __system __turn_off_raspberry]
type: command
name: Turn Off Raspberry Pi
gcode: HOST_SHUTDOWN

[menu __main __system __restart_klipper]
type: command
name: Restart Klipper
gcode: RESTART

[menu __main __system __restart_firmware]
type: command
name: Restart Firmware
gcode: FIRMWARE_RESTART

[menu __main __system __restart_raspberry]
type: command
name: Restart Raspberry Pi
gcode: HOST_RESTART
